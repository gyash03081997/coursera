D1 	Today is beautiful
D2	Today is not beautiful
N=2(no.of docs)

TF-IDF (TERM FREQUENCY-INVERSE DOCUMENT FREQUENCY)

def gender_features(word):
	returns {'last_letter':word[-1]}


check on =>

 gender_features('Sherlock')

from nltk.corpus import names
labelled_names=([(name,'male') for name in names.words('male.txt')]+[(name,'female') for name in names.words('female.txt')])

import random
random.shuffle(labeled_names)

featuresets=[(gender_features(n),gender) for (n,gender) in labeled_names]

train_set,test_test=featuresets[500:],featuresets[:500]

import nltk
classifier=nltk.NaiveBayesClassifier.train(train_set)

classifier.classify(gender_features('David'))
classifier.classify(gender_features('Michelle')) // gives exception for 'Obama'

nltk.classify.accuracy(classifier,test_test)
print(classifier.prob_classify(gender_features('David')))